# -*- coding: utf-8 -*-
"""Chamfer_Distance_Diffusion Models_By_Yash_Kulkarni

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qXJjxGuOMBlsErdB1UFKu-k-Co--rihR
"""

from google.colab import drive
drive.mount('/content/drive/')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Diffusion_Models/DiffusionReg-main/DiffusionReg-main

import os
print(os.getcwd())

!ls

!pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
!pip install numpy scipy
!pip install open3d
!pip install tqdm
!pip install open3d

import os
os.chdir('/content/drive/MyDrive/Diffusion_Models/DiffusionReg-main/DiffusionReg-main')

!python train.py --net_type DiffusionDCP --db_nm tudl

#transform_gt[:, :3, :] = data['transform_gt'][:, :3, :]

save_dir = "/content/drive/MyDrive/Diffusion_Models/DiffusionReg-main/DiffusionReg-main/yashmodel"
os.makedirs(save_dir, exist_ok=True)

import os
import torch
import datetime
import json
from google.colab import drive
drive.mount('/content/drive')

# First, load your model and other necessary components
from utils.options import opts
from modules.DCP.dcp import DCP

# Initialize the model
opts.device = "cpu"  # Since we're just saving
surrogate_model = DCP(opts)

# Create optimizer (needed for saving the full state)
optimizer = torch.optim.Adam(surrogate_model.parameters(), lr=opts.lr, betas=(0.9, 0.999))

# Define the save path in your Google Drive
save_dir = "/content/drive/MyDrive/Diffusion_Models/DiffusionReg-main/DiffusionReg-main/yashmodel"
os.makedirs(save_dir, exist_ok=True)

def save_model(model, optimizer):
    checkpoint = {
        'model_state_dict': model.state_dict(),
        'optimizer_state_dict': optimizer.state_dict(),
        'save_date': str(datetime.datetime.now())
    }

    # Save the full model
    model_path = os.path.join(save_dir, 'yashmodel_full.pth')
    torch.save(checkpoint, model_path)
    print(f"Full model saved to: {model_path}")

    # Save just the model state dict (smaller file)
    state_dict_path = os.path.join(save_dir, 'yashmodel_state_dict.pth')
    torch.save(model.state_dict(), state_dict_path)
    print(f"Model state dict saved to: {state_dict_path}")

    # Save model info
    info = {
        'save_date': str(datetime.datetime.now()),
        'model_type': 'DiffusionDCP',
        'save_location': save_dir
    }
    info_path = os.path.join(save_dir, 'model_info.json')
    with open(info_path, 'w') as f:
        json.dump(info, f, indent=4)
    print(f"Model info saved to: {info_path}")

# Save the model
save_model(surrogate_model, optimizer)



"""TESTING STARTS HERE ------>"""

pip install --ignore-installed blinker open3d numpy

!python test.py

!python analyze_test_results.py



